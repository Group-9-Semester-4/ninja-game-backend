# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ devops, develop, main ]
  pull_request:
    branches: [ devops, develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout backend repo
      uses: actions/checkout@v2
      with:
        path: backend
    - name: Check backend repo
      run: cd $GITHUB_WORKSPACE/backend ; ls -laf ; git status
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Checkout Unity repo
      uses: actions/checkout@v2
      with:
        repository: Group-9-Semester-4/ninja-game
        lfs: true
        token: ${{ secrets.ACCESS_TOKEN }}
        path: unity
    - name: Check unity repo
      run: cd $GITHUB_WORKSPACE ; ls -laf ; git status
    - name: Build Unity
      uses: game-ci/unity-builder@v2
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        projectPath: unity
        targetPlatform: WebGL
    - name: Format Unity folders
      run: |
        mv /github/workspace/unity/build/WebGL/WebGL /github/workspace/ninja
        rm -r /github/workspace/unity/*
        mv /github/workspace/ninja /github/workspace/
    - name: Build with Maven
      run: mvn -B package -P prod --file pom.xml ; pwd ; ls -l
#    - name: rsync deployments
#      uses: burnett01/rsync-deployments@4.1
#      with:
#        switches: -avzr --delete
#        path: target/
#        remote_path: ~/target
#        remote_host: ${{ secrets.VPS_IP }}
#        remote_port: ${{ secrets.VPS_PORT }}
#        remote_user: ${{ secrets.VPS_USER }}
#        remote_key: ${{ secrets.VPS_PRIVATE_KEY }}
